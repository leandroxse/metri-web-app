/**
 * Script para popular o Card√°pio PRIME COMPLETO baseado no PDF oficial
 * Executar: npx tsx scripts/seed-cardapio-prime-completo.ts
 */

import { createClient } from '@supabase/supabase-js'

const supabaseUrl = 'https://lrgaiiuoljgjasyrqjzk.supabase.co'
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxyZ2FpaXVvbGpnamFzeXJxanprIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NTY1ODY3OSwiZXhwIjoyMDcxMjM0Njc5fQ.mf5tJtki9Hrn_GdjyB_XC0SVv7Pzr9i2UAOK5R8v95s'

const supabase = createClient(supabaseUrl, supabaseKey)

async function seedCardapioPrimeCompleto() {
  console.log('üçΩÔ∏è Criando Card√°pio PRIME Completo...')

  // 1. Criar Menu
  const { data: menu, error: menuError } = await supabase
    .from('menus')
    .insert({
      name: 'Card√°pio Prime Buffet',
      description: 'Card√°pio completo Prime Buffet e Servi√ßos - A partir de 50 pessoas',
      status: 'active'
    })
    .select()
    .single()

  if (menuError) {
    console.error('Erro ao criar menu:', menuError)
    return
  }

  console.log('‚úÖ Menu criado:', menu.id)

  // 2. Definir Categorias com itens
  const categorias = [
    {
      nome: 'Bebidas: Sucos',
      recomendado: 2,
      itens: [
        'Cupua√ßu',
        'Maracuj√°',
        'Goiaba',
        'Acerola',
        'Abacaxi',
        'Tapereb√°'
      ]
    },
    {
      nome: 'Bebidas: Refrigerantes',
      recomendado: 1,
      itens: [
        'Refrigerante Normal e Zero A√ß√∫car'
      ]
    },
    {
      nome: 'Salgados Quentes',
      recomendado: 5,
      itens: [
        'Unha de caranguejo',
        'Coxinha de frango',
        'Risoli de camar√£o',
        'Empada de frango',
        'Barquete de camar√£o',
        'Barquete de frango',
        'Barquete de cupua√ßu com castanha do Par√°',
        'Canudinho',
        'Pastel de carne'
      ]
    },
    {
      nome: 'Finger Food',
      recomendado: 2,
      itens: [
        'Arroz a margarita',
        'Vatap√° gourmet',
        'Arroz de mani√ßoba',
        'Arroz de pato',
        'Camar√£o ao molho do chefe',
        'Penne ao molho de bacon',
        'Arroz Paraense',
        'Escondidinho de frango',
        'Bai√£o de dois com carne de sol',
        'Arroz cremoso de calabresa',
        'Fil√© cubo com arroz',
        'Fil√© com arroz cremoso',
        'Fricass√™ de frango',
        'Arroz de bacalhau',
        'Camar√£o sorteado com farofa',
        'Caranguejo com farofa',
        'Escondidinho de carne seca',
        'Charque com Arroz cremoso'
      ]
    },
    {
      nome: 'Pratos Prime - Fil√©',
      recomendado: 1,
      itens: [
        'Fil√© ao molho sugo com bacon',
        'Fil√© ao molho de vinho',
        'Fil√© ao molho madeira com champignon',
        'Fil√© ao molho quatro queijos',
        'Fil√© ao molho de mostarda',
        'Fil√© prime com queijo de b√∫falo e presunto de parma',
        'Fil√© ao molho barbecue com mussarela',
        'Fil√© ao molho de ferrugem Gratinado com queijo Provolone',
        'Fil√© ao molho ferrugem com queijo Brie'
      ]
    },
    {
      nome: 'Pratos Prime - Camar√£o',
      recomendado: 1,
      itens: [
        'Camar√£o Prime com molho gorgonzola',
        'Camar√£o ao molho quatro queijos',
        'Camar√£o ao molho de ervas finas',
        'Camar√£o marguerita',
        'Camar√£o molho de queijo cuia',
        'Camar√£o salteado com legumes',
        'Camar√£o imperial',
        'Bob√≥ de camar√£o'
      ]
    },
    {
      nome: 'Massas',
      recomendado: 1,
      itens: [
        'Talharim',
        'Penne',
        'Fettuccine',
        'Fusili',
        'Spaguet'
      ]
    },
    {
      nome: 'Molhos para Massa',
      recomendado: 1,
      itens: [
        '04 queijos',
        'Sugo',
        'Branco',
        'Marguerita',
        'Gorgonzola'
      ]
    },
    {
      nome: 'Acompanhamentos',
      recomendado: 3,
      itens: [
        'Arroz Branco',
        'Batata Palha',
        'Farofa'
      ]
    },
    {
      nome: 'Sobremesas',
      recomendado: 2,
      itens: [
        'Torta del√≠cia de chocolate',
        'Torta de morango com leite ninho',
        'Torta de lim√£o',
        'Torta de cupua√ßu com queijo cuia',
        'Torta prest√≠gio',
        'Torta de Nutella',
        'Torta Romeu e Julieta',
        'Torta doce de leite',
        'Torta de Orion',
        'Torta de ferreiro Roche',
        'Del√≠cia de Abacaxi',
        'Musse de cupua√ßu com Castanha',
        'Musse de abacaxi',
        'Musse de lim√£o',
        'Musse de maracuj√°'
      ]
    },
    {
      nome: 'Saideira Prime (custo adicional)',
      recomendado: 1,
      itens: [
        'Caldo de tucupi com jambu e camar√£o',
        'Caldo de macaxeira com bacon',
        'Caldo de Feij√£o com bacon'
      ]
    }
  ]

  // 3. Criar categorias e itens
  for (let catIndex = 0; catIndex < categorias.length; catIndex++) {
    const cat = categorias[catIndex]

    console.log(`üìã Criando categoria: ${cat.nome}`)

    const { data: categoria, error: catError } = await supabase
      .from('menu_categories')
      .insert({
        menu_id: menu.id,
        name: cat.nome,
        recommended_count: cat.recomendado,
        order_index: catIndex
      })
      .select()
      .single()

    if (catError) {
      console.error(`Erro ao criar categoria ${cat.nome}:`, catError)
      continue
    }

    console.log(`  ‚úÖ ${cat.nome} criada`)

    // Criar itens da categoria
    for (let itemIndex = 0; itemIndex < cat.itens.length; itemIndex++) {
      const itemNome = cat.itens[itemIndex]

      const { error: itemError } = await supabase
        .from('menu_items')
        .insert({
          category_id: categoria.id,
          name: itemNome,
          description: null,
          order_index: itemIndex
        })

      if (itemError) {
        console.error(`  ‚ùå Erro ao criar item ${itemNome}:`, itemError)
      } else {
        console.log(`    ‚Ä¢ ${itemNome}`)
      }
    }
  }

  console.log('\nüéâ Card√°pio PRIME Completo criado com sucesso!')
  console.log(`üìã Menu ID: ${menu.id}`)
  console.log(`üìä Resumo:`)
  console.log(`   - ${categorias.length} categorias`)
  console.log(`   - ${categorias.reduce((sum, cat) => sum + cat.itens.length, 0)} itens no total`)
}

seedCardapioPrimeCompleto().catch(console.error)
